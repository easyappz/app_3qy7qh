openapi: 3.0.0
info:
  title: Photo Rating API
  version: 1.0.0
  description: API for a photo rating application with user authentication and photo management.
servers:
  - url: /api
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                username:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: number
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: number
                      points:
                        type: number
        '400':
          description: Email already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: number
                      points:
                        type: number
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /reset-password-request:
    post:
      summary: Request password reset token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /reset-password:
    post:
      summary: Reset password with token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid or expired token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /profile:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: number
                      points:
                        type: number
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: number
      responses:
        '200':
          description: User profile updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                      email:
                        type: string
                      username:
                        type: string
                      gender:
                        type: string
                      age:
                        type: number
                      points:
                        type: number
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos:
    post:
      summary: Upload a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '201':
          description: Photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  photo:
                    type: object
                    properties:
                      id:
                        type: string
                      userId:
                        type: string
                      url:
                        type: string
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    get:
      summary: Get photos with optional filters
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: gender
          schema:
            type: string
            enum: [male, female, other]
          description: Filter photos by user gender
        - in: query
          name: minAge
          schema:
            type: number
          description: Filter photos by minimum user age
        - in: query
          name: maxAge
          schema:
            type: number
          description: Filter photos by maximum user age
      responses:
        '200':
          description: List of photos
          content:
            application/json:
              schema:
                type: object
                properties:
                  photos:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        userId:
                          type: object
                          properties:
                            id:
                              type: string
                            username:
                              type: string
                            gender:
                              type: string
                            age:
                              type: number
                        url:
                          type: string
                        ratings:
                          type: array
                          items:
                            type: object
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/rate:
    post:
      summary: Rate a photo
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                photoId:
                  type: string
                score:
                  type: number
      responses:
        '200':
          description: Rating added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  photo:
                    type: object
                  raterPoints:
                    type: number
        '400':
          description: Cannot rate own photo or not enough points
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /photos/{photoId}/stats:
    get:
      summary: Get rating statistics for a photo
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: photoId
          required: true
          schema:
            type: string
          description: ID of the photo to get stats for
      responses:
        '200':
          description: Rating statistics for the photo
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: object
                    properties:
                      totalRatings:
                        type: number
                      averageScore:
                        type: number
                      byGender:
                        type: object
                        properties:
                          male:
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                          female:
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                          other:
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                      byAge:
                        type: object
                        properties:
                          under20:
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                          '20-30':
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                          '30-40':
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
                          over40:
                            type: object
                            properties:
                              count:
                                type: number
                              avgScore:
                                type: number
        '401':
          description: Authentication token required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '403':
          description: Invalid token
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
